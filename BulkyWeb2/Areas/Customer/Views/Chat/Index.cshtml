@{
    ViewData["Title"] = "Chat";
}

<style>
    .chat-container {
        max-width: 800px;
        margin: 0 auto;
        padding: 20px;
        background-color: #f5f5f5;
        border-radius: 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    #messageContainer {
        height: 400px;
        overflow-y: auto;
        padding: 10px;
        margin-bottom: 20px;
        background-color: white;
        border-radius: 8px;
    }

    .message {
        margin: 10px 0;
        padding: 10px;
        border-radius: 8px;
        max-width: 70%;
    }

    .user-message {
        background-color: #007bff;
        color: white;
        margin-left: auto;
    }

    .bot-message {
        background-color: #e9ecef;
        color: #212529;
        margin-right: auto;
    }

    .chat-input {
        display: flex;
        gap: 10px;
    }

    .chat-input input {
        flex-grow: 1;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
    }

    .chat-input button {
        padding: 10px 20px;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .chat-input button:hover {
        background-color: #0056b3;
    }

    .typing-indicator {
        display: none;
        margin: 10px 0;
        padding: 10px;
    }

    .typing-indicator span {
        display: inline-block;
        width: 8px;
        height: 8px;
        margin-right: 5px;
        background-color: #90949c;
        border-radius: 50%;
        opacity: 0.4;
        animation: blink 1.4s infinite both;
    }

    .typing-indicator span:nth-child(2) {
        animation-delay: 0.2s;
    }

    .typing-indicator span:nth-child(3) {
        animation-delay: 0.4s;
    }

    @@keyframes blink {
        0% { opacity: 0.2; }
        20% { opacity: 1; }
        100% { opacity: 0.2; }
    }
</style>

<div class="chat-container">
    <div id="messageContainer"></div>
    <div class="typing-indicator">
        <span></span>
        <span></span>
        <span></span>
    </div>
    <div class="chat-input">
        <input type="text" id="messageInput" placeholder="Type your message..." />
        <button onclick="sendMessage()">Send</button>
    </div>
</div>

<script>
    function addMessage(content, isUser = false) {
        const messageContainer = document.getElementById('messageContainer');
        const messageDiv = document.createElement('div');
        messageDiv.className = `message ${isUser ? 'user-message' : 'bot-message'}`;
        messageDiv.textContent = content;
        messageContainer.appendChild(messageDiv);
        messageContainer.scrollTop = messageContainer.scrollHeight;
    }

    function showTypingIndicator() {
        document.querySelector('.typing-indicator').style.display = 'block';
    }

    function hideTypingIndicator() {
        document.querySelector('.typing-indicator').style.display = 'none';
    }

    async function sendMessage() {
        const messageInput = document.getElementById('messageInput');
        const message = messageInput.value.trim();
        
        if (!message) return;

        addMessage(message, true);
        messageInput.value = '';
        
        showTypingIndicator();

        try {
            const response = await fetch('/Customer/Chat/SendMessage', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(message)
            });

            if (!response.ok) {
                throw new Error('Network response was not ok');
            }

            const data = await response.json();
            hideTypingIndicator();
            
            if (data.success) {
                addMessage(data.response);
            } else {
                addMessage('Sorry, there was an error: ' + data.error);
            }
        } catch (error) {
            console.error('Error:', error);
            hideTypingIndicator();
            addMessage('Sorry, there was an error processing your message.');
        }
    }

    document.getElementById('messageInput').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            sendMessage();
        }
    });
</script> 